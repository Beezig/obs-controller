image: "rust:latest"
variables:
  RUSTFLAGS: -D warnings
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
before_script:
  - apt-get update -yqq
  - apt-get install -yqq --no-install-recommends build-essential pkg-config libobs-dev lsb-release wget software-properties-common gnupg2
  - bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
  - wget -O /usr/include/obs/obs-frontend-api.h https://raw.githubusercontent.com/obsproject/obs-studio/a38cd03e065efbc863bc897012900938aa70beb3/UI/obs-frontend-api/obs-frontend-api.h
  - rustc --version && cargo --version

stages:
  - test
  - build

cache: &global_cache
  key: ${CI_COMMIT_BRANCH}
  paths:
    - target/
    - $CARGO_HOME
  policy: pull

test:cargo:
  stage: test
  script:
    - rustup component add clippy
    - cargo clippy
    - cargo test --workspace
  cache:
    <<: *global_cache
    policy: pull-push

.artifacts:
  artifacts:
    paths:
      - target/**/*.so
      - target/**/*.dll
      - target/**/*.dylib
    expire_in: 1 week

build linux:
  stage: build
  extends: .artifacts
  script:
    - cargo build --release
  cache:
    <<: *global_cache
    policy: pull

build windows x86_64:
  stage: build
  extends: .artifacts
  script:
    - apt-get install -yqq --no-install-recommends mingw-w64
    - rustup target add x86_64-pc-windows-gnu
    - cargo build --release --target x86_64-pc-windows-gnu
  cache:
    <<: *global_cache
    policy: pull

build darwin:
  stage: build
  extends: .artifacts
  image: "joseluisq/rust-linux-darwin-builder:latest"
  script:
    - rustup target add x86_64-apple-darwin
    - cargo build --release --target x86_64-apple-darwin
  cache:
    <<: *global_cache
    policy: pull